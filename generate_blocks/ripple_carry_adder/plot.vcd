$date
	Thu Aug 01 18:33:58 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module adder_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " carry $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$scope module DUT $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % carry_in $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " carry_out $end
$var wire 5 ) carry [4:0] $end
$scope begin fa_block[0] $end
$var wire 1 * t1 $end
$var wire 1 + t2 $end
$var wire 1 , t3 $end
$upscope $end
$scope begin fa_block[1] $end
$var wire 1 - t1 $end
$var wire 1 . t2 $end
$var wire 1 / t3 $end
$upscope $end
$scope begin fa_block[2] $end
$var wire 1 0 t1 $end
$var wire 1 1 t2 $end
$var wire 1 2 t3 $end
$upscope $end
$scope begin fa_block[3] $end
$var wire 1 3 t1 $end
$var wire 1 4 t2 $end
$var wire 1 5 t3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
05
04
03
02
01
00
0/
0.
0-
0,
1+
0*
b10 )
b10 (
b1 '
b1 &
0%
b1 $
b1 #
0"
b10 !
$end
#10
b100 !
b100 (
b100 )
0+
1.
b10 $
b10 '
b10 #
b10 &
#20
b0 )
b111 !
b111 (
02
1*
1-
0.
10
b11 $
b11 '
b100 #
b100 &
#30
b1101 !
b1101 (
0-
13
b100 $
b100 '
b1001 #
b1001 &
#40
1"
15
b10 !
b10 (
b11010 )
0*
1+
00
11
b101 $
b101 '
b1101 #
b1101 &
#50
