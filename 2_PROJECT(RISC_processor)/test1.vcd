$date
	Sat Oct 05 20:57:14 2019
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module test1_sum $end
$var reg 1 ! clk1 $end
$var reg 1 " clk2 $end
$var integer 32 # k [31:0] $end
$scope module sum $end
$var wire 1 ! clk1 $end
$var wire 1 " clk2 $end
$var reg 1 $ BRANCH_TAKEN $end
$var reg 32 % EX_MEM_ALUout [31:0] $end
$var reg 32 & EX_MEM_B [31:0] $end
$var reg 1 ' EX_MEM_Cond $end
$var reg 32 ( EX_MEM_IR [31:0] $end
$var reg 3 ) EX_MEM_type [2:0] $end
$var reg 1 * HALTED $end
$var reg 32 + ID_EX_A [31:0] $end
$var reg 32 , ID_EX_B [31:0] $end
$var reg 32 - ID_EX_IR [31:0] $end
$var reg 32 . ID_EX_Imm [31:0] $end
$var reg 32 / ID_EX_NPC [31:0] $end
$var reg 3 0 ID_EX_type [2:0] $end
$var reg 32 1 IF_ID_IR [31:0] $end
$var reg 32 2 IF_ID_NPC [31:0] $end
$var reg 32 3 MEM_WB_ALUout [31:0] $end
$var reg 32 4 MEM_WB_IR [31:0] $end
$var reg 32 5 MEM_WB_LMD [31:0] $end
$var reg 3 6 MEM_WB_type [2:0] $end
$var reg 32 7 PC [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
0*
bx )
bx (
x'
bx &
bx %
0$
b100000 #
0"
0!
$end
#500
1!
#700
b1 7
b1 2
b1100111001110111100000000000 1
#1000
0!
#1500
1"
#1700
b0 0
b111100000000000 .
b1100111001110111100000000000 -
b1 /
b111 ,
b111 +
#2000
0"
#2500
1!
#2700
b111 %
b1100111001110111100000000000 (
b0 )
b10 7
b10 2
b101000000000010000000000001111 1
#3000
0!
#3500
b0 +
1"
#3700
b1 0
b0 6
b1100111001110111100000000000 4
b1111 .
b101000000000010000000000001111 -
b10 /
b1 ,
#4000
0"
#4500
1!
#4700
b11 7
b11 2
b101000000000100000000000010100 1
b1111 %
b101000000000010000000000001111 (
b1 )
#5000
0!
#5500
1"
#5700
b1111 3
b1 6
b101000000000010000000000001111 4
b10100 .
b101000000000100000000000010100 -
b11 /
b10 ,
#6000
0"
#6500
1!
#6700
b10100 %
b101000000000100000000000010100 (
b100 7
b100 2
b101000000000110000000000011001 1
#7000
0!
#7500
1"
#7700
b10100 3
b11001 .
b101000000000110000000000011001 -
b100 /
b11 ,
b101000000000100000000000010100 4
#8000
0"
#8500
1!
#8700
b101 7
b101 2
b1100111001110111100000000000 1
b11001 %
b101000000000110000000000011001 (
#9000
0!
#9500
1"
#9700
b11001 3
b0 0
b101000000000110000000000011001 4
b111100000000000 .
b1100111001110111100000000000 -
b101 /
b111 ,
b111 +
#10000
0"
#10500
1!
#10700
b111 %
b1100111001110111100000000000 (
b0 )
b110 7
b110 2
#11000
0!
#11500
1"
#11700
b111 3
b110 /
b0 6
b1100111001110111100000000000 4
#12000
0"
#12500
1!
#12700
b111 7
b111 2
b1000100010000000000000 1
#13000
0!
#13500
1"
#13700
b10000000000000 .
b1000100010000000000000 -
b111 /
b10100 ,
b1111 +
#14000
0"
#14500
1!
#14700
b100011 %
b1000100010000000000000 (
b1000 7
b1000 2
b1100111001110111100000000000 1
#15000
0!
#15500
1"
#15700
b100011 3
b111100000000000 .
b1100111001110111100000000000 -
b1000 /
b111 ,
b111 +
b1000100010000000000000 4
#16000
0"
#16500
1!
#16700
b1001 7
b1001 2
b100000110010100000000000 1
b111 %
b1100111001110111100000000000 (
#17000
0!
#17500
1"
#17700
b111 3
b1100111001110111100000000000 4
b10100000000000 .
b100000110010100000000000 -
b1001 /
b11001 ,
b100011 +
#18000
0"
#18500
1!
#18700
b111100 %
b100000110010100000000000 (
b1010 7
b1010 2
b11111100000000000000000000000000 1
#19000
0!
#19500
b0 ,
b0 +
1"
#19700
b101 0
b111100 3
b0 .
b11111100000000000000000000000000 -
b1010 /
b100000110010100000000000 4
#20000
0"
#20500
1!
#20700
b1011 7
b1011 2
bx 1
b11111100000000000000000000000000 (
b101 )
#21000
0!
#21500
1"
#21700
b101 6
b11111100000000000000000000000000 4
bx .
bx -
b1011 /
bx ,
bx +
#22000
0"
#22500
1!
#22700
1*
bx (
b1100 7
b1100 2
#23000
0!
#23500
1"
#24000
0"
#24500
1!
#25000
0!
#25500
1"
#26000
0"
#26500
1!
#27000
0!
#27500
1"
#28000
0"
b110 #
#28500
1!
#29000
0!
#29500
1"
#30000
0"
